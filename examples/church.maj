;; -*- mode: lisp; mode: majestic; -*-

(def zero  (fn (f x) x))
(def one   (fn (f x) (f x)))
(def two   (fn (f x) (f (f x))))
(def three (fn (f x) (f (f (f x)))))
(def four  (fn (f x) (f (f (f (f x))))))
(def five  (fn (f x) (f (f (f (f (f x)))))))

(defn succ (n f x)
  (f (n f x)))

(defn add (m n f x)
  (m f (n f x)))

(defn numeral->number (num)
  (num (fn (n) (+ 1 n))
       0))

;; 2 + 3 = 5
(print "2 + 3 = {}" (numeral->number (add two three)))
